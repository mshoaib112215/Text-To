{"version":3,"sources":["componenets/NavBar.js","componenets/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","background","color","value","rows","onChange","event","target","placeholder","newText","toUpperCase","toLowerCase","compressor","replace","trim","split","join","prettier","myBox","document","getElementById","navigator","clipboard","writeText","select","length","defaultProps","main","App","setMode","aboutLink","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a1316fbb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                {props.main}\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={props.aboutLink}>\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>*/}\r\n        <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          <input type=\"checkbox\" id=\"flexSwitchCheckDefault\" className=\"form-check-input\" onClick={props.toggleMode} />\r\n          <label htmlFor=\"flexSwitchCheckDefault\" className=\"form-check-label\">Enable {props.mode === \"light\" ? \"Dark\" : \"Light\"} Mode</label>\r\n        </div>\r\n      </div>\r\n      {/* </div> */}\r\n    </nav >\r\n  );\r\n}\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutLink: PropTypes.string,\r\n  main: PropTypes.string,\r\n};\r\nNavBar.defaultProps = {\r\n  title: \"CodeUtiles\",\r\n  main: \"Home\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n\r\n    const clickHandler = () => {\r\n        let newText = text.toUpperCase(text);\r\n\r\n        setText(newText);\r\n    };\r\n    const handleCopy = () => {\r\n        let myBox = document.getElementById('myBox');\r\n        navigator.clipboard.writeText(text);\r\n        myBox.select();\r\n    }\r\n    const extraSpaces = () => {\r\n        setText(text.split(/[ ]+/).join(\" \"))\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase(text);\r\n\r\n        setText(newText);\r\n    };\r\n    const handleOnChange = (event) => {\r\n\r\n\r\n        setText(event.target.value);\r\n\r\n    };\r\n    const clearAll = () => {\r\n        setText(\"\");\r\n\r\n    }\r\n    const codeCompressor = () => {\r\n        let compressor = text.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n        compressor = compressor.trim().split(/ +/).join(' ');\r\n\r\n\r\n        setText(compressor);\r\n    }\r\n    const codePrettier = () => {\r\n        let prettier = text.trim().split(/ +/).join(' ');\r\n        prettier = text.replace(/(;)/g, \";\\n\");\r\n        prettier = prettier.replace(/{/g, \"{\\n\");\r\n        prettier = prettier.replace(/}/g, \"}\");\r\n        prettier = prettier.replace(/</g, \"\\n<\");\r\n\r\n\r\n        setText(prettier);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"my-3 container\" >\r\n                <h4>{props.title}</h4>\r\n                <textarea\r\n                    style={{ background: props.mode === \"light\" ? \"white\" : \"rgb(0, 42, 62)\", color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n                    value={text}\r\n                    className=\"form-control\"\r\n                    id=\"myBox\"\r\n                    rows=\"9\"\r\n                    onChange={handleOnChange}\r\n                    placeholder=\"Enter Your Text Here...\"\r\n                ></textarea>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={clickHandler}>Convert To Upper Case</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLowClick}>Convert To Lower Case</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={codeCompressor}>Code Compressor</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={codePrettier}>Code Prettier</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={extraSpaces}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-danger my-3 mx-1\" onClick={clearAll}>Clear All</button>\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2>Your Text Summary</h2>\r\n                <p>Characters: {text.length}</p>\r\n                <p>Words: {text.length === 0 ? 0 : text.trim().split(' ').length}</p>\r\n\r\n                < h3 > Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Type Something to Preview...\"}</p>\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from 'react'\n// import About from \"./componenets/About\";\nimport NavBar from \"./componenets/NavBar\";\nimport TextForm from \"./componenets/TextForm\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'rgb(0, 42, 62)';\n      document.body.style.color = 'white';\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n    }\n  }\n  return (\n\n    <>\n      <NavBar title=\"Text-Ta\" main=\"Home\" aboutLink=\"/\" mode={mode} toggleMode={toggleMode} />\n      {/* <Router>\n        <Switch>\n          <Route path=\"/\"> */}\n      <TextForm title=\"Enter Your Text Here...\" mode={mode} />\n      {/* </Route>\n          <Route path=\"/About\">\n            <About />\n          </Route>\n        </Switch>\n      </Router> */}\n    </>\n  );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport NavBar from \"./componenets/NavBar\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}